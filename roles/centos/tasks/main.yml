---
# tasks file for centos
- name: Install required packages
  yum:
    name: ['yum-utils', 'device-mapper-persistent-data', 'lvm2']
    state: present
    update_cache: True

- name: Add Docker repository
  command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
  #become: yes
  
- name: Install Docker packages
  yum:
    name: ['docker-ce', 'docker-ce-cli', 'containerd.io']
    state: present
    update_cache: True

- name: Starting docker service
  service:
    name: "docker"
    state: started
    enabled: yes

- name: Create systemd docker folder
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory 

- name: Enabling Engine API
  copy:
    src: /vagrant/override.conf
    dest: /etc/systemd/system/docker.service.d/override.conf

- name: Just force systemd to reread configs
  systemd:
    daemon_reload: yes

- name: Restart Docker service 
  systemd:
    state: restarted
    name: docker

# NOTE - this task cannot be used because I could not install ansible.posix collection with Vagrant - TO FIX
#- name: Expose Docker Engine API port
#  ansible.posix.firewalld:
#    port: 2375/tcp
#    zone: public
#    permanent: yes
#    state: enabled

- name: Enable FirewallD
  become: yes
  systemd:
    name: firewalld
    state: started
    enabled: true
    masked: no

- name: Open Docker Engine API port
  become: yes
  command: "{{item}}"
  with_items:
    - firewall-cmd --permanent --zone=public --add-port=2375/tcp
    - firewall-cmd --permanent --zone=public --add-port=2376/tcp
    - firewall-cmd --permanent --zone=public --add-port=2377/tcp
    - firewall-cmd --permanent --zone=public --add-port=7946/tcp
    - firewall-cmd --permanent --zone=public --add-port=80/tcp
    - firewall-cmd --permanent --zone=public --add-port=7946/udp
    - firewall-cmd --permanent --zone=public --add-port=4789/udp
    #- firewall-cmd --reload

- name: Reload firewalld service
  systemd:
    name: firewalld
    state: reloaded

# Executed only on main
- name: Init Docker Swarm Master
  when: "'main' in {{group_names}}" # fix here
  become: yes
  command: docker swarm init --advertise-addr 192.168.56.11
  
- name: Get Workers Token
  when: "'main' in {{group_names}}"
  become: yes
  command: docker swarm join-token worker -q
  register: command_output

- set_fact:
    work_token: "{{ command_output.stdout }}"

- debug: 
    msg: "{{work_token}}"

# Executed only on workers
- hosts: workers
  tasks:
  - name: Allow access from 10.0.0.1
    when: "'workers' in {{group_names}}"
    become: yes
    command: docker swarm join --token {{work_token}} 192.168.56.11:2377

